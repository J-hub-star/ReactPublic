{"version":3,"sources":["component/search-bar/search-bar.component.jsx","component/read-more/ReadMore.jsx","component/card/Card.jsx","component/card-list/CardList.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","ReadMore","text","children","useState","toggle","setToggle","slice","onClick","Card","props","monsters","id","imageurl","src","character","anime","quote","CardList","map","App","state","searchField","fetch","then","response","json","setState","this","filteredMons","filter","monster","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAceA,MATf,YAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC5B,OACI,qBAAKC,UAAU,SAAf,SACI,uBAAOC,KAAK,SAASH,YAAaA,EAAaI,SAAUH,O,OCStDI,EAfE,SAAC,GAAe,IACvBC,EADsB,EAAbC,SAAa,EAEDC,oBAAS,GAFR,mBAErBC,EAFqB,KAEdC,EAFc,KAM1B,OACE,oBAAGR,UAAU,OAAb,UACGO,EAASH,EAAKK,MAAM,EAAG,IAAML,EAC9B,sBAAMM,QANW,WACnBF,GAAWD,IAKsBP,UAAU,eAAzC,SACGO,EAAS,eAAiB,mBCRxB,SAASI,EAAKC,GAAQ,IAAD,EACFN,mBAAS,wBAAD,OAAyBM,EAAMC,SAASC,GAAxC,cADN,mBAC1BC,EAD0B,UAIhC,OACI,sBAAKf,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAf,SACI,yBAAQA,UAAU,cAAlB,UACA,qBAAKgB,IAAKD,EAAUf,UAAU,kBAAuB,uBACjD,oBAAIA,UAAU,cAAd,SAA6BY,EAAMC,SAASI,YAC5C,oBAAIjB,UAAU,cAAd,SAA6BY,EAAMC,SAASK,QAC5C,cAAC,EAAD,UAAYN,EAAMC,SAASM,aAKnC,0B,UCTGC,EAPE,SAACR,GACV,OAAU,qBAAKZ,UAAU,YAAf,SACDY,EAAMC,SAASQ,KAAI,SAAAR,GAAQ,OAAI,cAACF,EAAD,CAAwBE,SAAUA,GAAvBA,EAASC,UCgCrDQ,E,kDA9Bb,WAAYV,GAAO,IAAD,8BAChB,cAAMA,IACDW,MAAQ,CACXV,SAAS,GACTK,OAAM,EACNM,YAAY,IALE,E,qDAQlB,WAAoB,IAAD,OACPC,MAAM,2CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAb,GAAQ,OAAI,EAAKgB,SAAS,CAAChB,SAASA,S,oBAE1D,WAAU,IAAD,SACwBiB,KAAKP,MAA7BV,EADA,EACAA,SAASW,EADT,EACSA,YACVO,EAAelB,EAASmB,QAAO,SAAAC,GAAO,OAAGA,EAAQhB,UAAUiB,cAAcC,SAASX,EAAYU,kBAEpG,OACE,sBAAKlC,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CACAF,YAAY,uCACZC,aAAc,SAAAqC,GAAI,EAAKP,SAAS,CAACL,YAAYY,EAAEC,OAAOC,WACtD,cAAC,EAAD,CAAUzB,SAAUkB,W,GAxBVQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18036dea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './searchbox.styles.css';\r\n\r\n\r\n\r\nfunction SearchBox({placeholder,handleChange}) {\r\n    return (\r\n        <div className='search'>\r\n            <input type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;","import React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({children}) =>{\r\n    const text = children;\r\n    const [toggle,setToggle] = useState(true);\r\n    const toggleReadMore = () => {\r\n        setToggle(!toggle);\r\n      };\r\n      return (\r\n        <p className=\"text\">\r\n          {toggle ? text.slice(0, 18) : text}\r\n          <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n            {toggle ? \"...read more\" : \" show less\"}\r\n          </span>\r\n        </p>\r\n      );\r\n    };\r\nexport default ReadMore","import React,{useState,useEffect} from 'react'\r\nimport ReactMore from '../../component/read-more/ReadMore';\r\n\r\n\r\nexport default function Card(props) {\r\n    const[imageurl,setImageUrl] = useState(`https://robohash.org/${props.monsters.id}?set=set2`);\r\n        \r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"container\">\r\n                <header className=\"card-header\">\r\n                <img src={imageurl} className=\"author-avatar\" ></img><br/>\r\n                    <h2 className=\"card-author\">{props.monsters.character}</h2>\r\n                    <h2 className=\"author-name\">{props.monsters.anime}</h2>\r\n                    <ReactMore>{props.monsters.quote}</ReactMore>\r\n                    \r\n                    \r\n                </header>\r\n            </div>\r\n            <h3></h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Card from '../card/Card';\r\nimport './cardlist.css';\r\n\r\nconst CardList = (props) => { \r\n        return(   <div className=\"card-list\"> \r\n                {props.monsters.map(monsters => <Card key={monsters.id} monsters={monsters}></Card>)}\r\n            </div>)\r\n            \r\n}\r\n\r\nexport default CardList;\r\n","import './App.css';\nimport SearchBox from \"../src/component/search-bar/search-bar.component.jsx\";\nimport CardList from \"../src/component/card-list/CardList.jsx\";\nimport React, { Component } from 'react';\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      monsters:[],\n      anime:false,\n      searchField:\"\"\n    }\n  }\n  componentDidMount(){\n  const res = fetch(`https://animechan.vercel.app/api/quotes`)\n                  .then(response => response.json())\n                  .then(monsters => this.setState({monsters:monsters}));\n  }\n  render() {\n    const {monsters,searchField} = this.state;\n    const filteredMons = monsters.filter(monster =>monster.character.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Quote Book</h1>\n        <SearchBox  \n        placeholder=\"Search for your favourite characters\" \n        handleChange={e=>{this.setState({searchField:e.target.value})}}></SearchBox>\n        <CardList monsters={filteredMons}></CardList>\n    </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}